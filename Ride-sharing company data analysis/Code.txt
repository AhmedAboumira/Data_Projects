--Step 1. Exploratory data analysis--

/*1- Find the number of taxi rides for each taxi company for November 15-16, 2017. Name the resulting field trips_amount and print it along with the company_name field. Sort the results by the trips_amount field in descending order */


SELECT 
    cabs.company_name,
    COUNT (trips.cab_id) AS trips_amount
FROM 
    trips INNER JOIN cabs ON trips.cab_id = cabs.cab_id
WHERE 
    trips.start_ts::date BETWEEN'2017-11-15' AND '2017-11-16'
GROUP BY 
    company_name
ORDER BY 
    trips_amount DESC;


/*2- Find the number of rides for every taxi company whose name contains the words "Yellow" or "Blue" for November 1-7, 2017. Name the resulting variable trips_amount. Group the results by the company_name field*/

SELECT
    cabs.company_name,
    COUNT(trips.trip_id) AS trips_amount
FROM 
    cabs
    INNER JOIN trips ON cabs.cab_id = trips.cab_id
WHERE 
    trips.start_ts::date BETWEEN '2017-11-01' AND '2017-11-07'
    AND (cabs.company_name LIKE '%Yellow%' 
         OR cabs.company_name LIKE '%Blue%')
GROUP BY 
    cabs.company_name;


/*3-In November 2017, the most popular taxi companies were Flash Cab and Taxi Affiliation Services. Find the number of rides for these two companies and name the resulting variable trips_amount. Join the rides for all other companies in the group "Other." Group the data by taxi company names. Name the field with taxi company names company. Sort the result in descending order by trips_amount*/


SELECT 
    SUBQ.company_name,
    SUM (SUBQ.trips_amount) AS trips_amount
FROM (SELECT 
        CASE WHEN cabs.company_name ='Flash Cab' THEN 'Flash Cab'
        WHEN  cabs.company_name = 'Taxi Affiliation Services' THEN 'Taxi Affiliation Services'
        ELSE 'Other' END AS company_name,
        COUNT (trips.trip_id) AS trips_amount
    FROM 
        trips INNER JOIN cabs ON trips.cab_id = cabs.cab_id
    WHERE 
        trips.start_ts::date BETWEEN '2017-11-01' AND '2017-11-07'
    GROUP BY 
        company_name
    ORDER BY 
        trips_amount DESC) AS SUBQ
GROUP BY 
    company_name
ORDER BY 
    trips_amount DESC;


/*Step 2. Determine if and how the duration of rides from the Loop to O'Hare International Airport changes on rainy Saturdays compared to other days of the week and other weather conditions*/

--4-Retrieve the identifiers of the O'Hare and Loop neighborhoods from the neighborhoods table--

SELECT 
    neighborhood_id,
    name
FROM 
    neighborhoods
WHERE 
    name = 'Loop' 
    OR 
    name LIKE '%O''Hare%';

/*5- For each hour, retrieve the weather condition records from the weather_records table. Using the CASE operator, break all hours into two groups: "Bad" if the description field contains the words "rain" or "storm," and "Good" for others. Name the resulting field weather_conditions. The final table must include two fields: date and hour (ts) and weather_conditions*/

SELECT 
    ts,
    CASE WHEN description LIKE '%rain%' THEN 'Bad'
         WHEN description LIKE '%storm%' THEN 'Bad'
         ELSE 'Good' END AS weather_conditions
FROM 
    weather_records;


/*6- Retrieve from the trips table all the rides that started in the Loop (neighborhood_id: 50) and ended at O'Hare (neighborhood_id: 63) on a Saturday. Get the weather conditions for each ride. Use the method you applied in the previous task. Also retrieve the duration of each ride. Ignore rides for which data on weather conditions is not available*/

SELECT 
    trips.start_ts,
    CASE WHEN weather_records.description LIKE '%rain%' THEN 'Bad'
         WHEN weather_records.description LIKE '%storm%' THEN 'Bad'
         ELSE 'Good' END AS weather_condition,
    trips.duration_seconds
FROM 
    trips INNER JOIN weather_records ON trips.start_ts = weather_records.ts
WHERE 
    (trips.pickup_location_id = '50' AND trips.dropoff_location_id = '63')
AND 
    EXTRACT ( DOW FROM trips.start_ts) = '6'
ORDER BY 
    trips.trip_id;


